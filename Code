#include <stdio.h>
#include <stdlib.h>
void game(char ezam[12][12])
{
 int a,b;
    int x = 0;
    static int c[5];
    int m,t;
    char ch;
    int win;
    int k =0;
    int q,r,d,e;

    printf("Enter the number of players in the game : ");
    scanf("%d",&b);

    system("clear");
    printf("the game begins now; maximum allotted steps is 40\n");
    char maze[12][12];



    for(int i =0; i<b; i++)

    {
        
    for(int l=0; l<12; l++)
    {
        for(int m =0;m<12; m++)
        {
            maze[l][m] = ezam[l][m];
        }
    }
        int row=11,col = 10;
       printf("Get ready player %d\n", i+1);
        for(m=1; m<=40; m++)
        {

            for(q=0; q<12; q++)
            {

                for(r=0; r<12; r++)
                {
                    printf("%c",maze[q][r]);
                }
                printf("\n");
            }
            printf("DEAR PLAYER PRESS w TO MOVE AHEAD\nd TO MOVE RIGHT\na TO MOVE LEFT\ns TO MOVE BACK\nAfter reaching the end point, please enter y\n");

            printf("\nEnter Your Choice : ");
            scanf("%d", &x);
            scanf("%c", &ch);
            system("clear");
            if (row==0 && col==5) {
                printf("Maze solved\n");
                break;
            }
            else
            {
                t=1;
                d=row;
                e=col;
                if(ch=='w')
                    row--;
                if(ch=='d')
                    col++;
                if(ch=='a')
                    col--;
                if(ch=='s')
                    row++;
                if(maze[row][col]=='#')
                {
                    printf("you can't step here\n\n");

                    t=0;
        if(ch=='w')
                        row++;
                    if(ch=='d')
                        col--;
                    if(ch=='a')
                        col++;
                    if(ch=='s')
                        row--;
                }

                if(t==1)
                {
                    maze[row][col]='S';
                    maze[d][e] ='.';
                }
            }
  c[i] = m;
        }


        if(m==41)
            printf("GAME OVER\n");

    }
    int min=40;
    for(int k=0; k<b; k++)
    {
        if(c[k]<min)
        {
            win=k+1;
            min=c[k];
        }
    }
    printf("the winner is player %d\n",win);
} 

int main()
{
    int x;
    printf("press 1 for easy, press 2 for medium, press 3 for difficult");
    scanf("%d",&x);
char maze1[ 12 ][ 12 ] = {{ '#', '#', '#', '#', '#', 'E', '#', '#', '#', '#', '#', '#'},  // 0
                             {'#', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '#'},  // 1
                             {'.', '.', '#', '.', '#', '.', '#', '#', '#', '#', '.', '#'},  // 2
                             {'#', '#', '#', '.', '#', '.', '.', '.', '.', '#', '.', '#'},  // 3
                             {'#', '.', '.', '.', '.', '#', '#', '#', '.', '#', '.', '.'},  // 4
                             {'#', '#', '#', '#', '.', '#', '.', '#', '.', '#', '.', '#'},  // 5
                             {'#', '.', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#'},  // 6
                             {'#', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#'},  // 7
                             {'#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '#'},  // 8
                             {'#', '#', '#', '#', '#', '#', '.', '#', '#', '#', '.', '#'},  // 9
                             {'#', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '#'},  // 10
                             {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', 'S', '#'} };// 11
char maze2[ 12 ][ 12 ] = {{'#', '#', '#', '#', '#', 'E', '#', '#', '#', '#', '#', '#'},  // 0
                                 {'#', '.', '.', '.', '#', '.', '#', '.', '.', '.', '.', '.'},  // 1
                                 {'.', '.', '#', '.', '#', '.', '#', '#', '#', '#', '.', '.'},  // 2
                                 {'#', '#', '#', '.', '.', '.', '.', '.', '#', '#', '.', '.'},  // 3
                                 {'.', '.', '.', '.', '.', '#', '#', '#', '#', '#', '.', '.'},  // 4
                                 {'.', '#', '#', '#', '.', '#', '.', '#', '.', '.', '.', '.'},  // 5
                                 {'.', '.', '.', '.', '#', '#', '.', '#', '.', '#', '#', '.'},  // 6
                                 {'#', '#', '.', '#', '#', '#', '.', '#', '.', '.', '.', '.'},  // 7
                                 {'#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '.'},  // 8
                                 {'#', '#', '#', '#', '#', '#', '.', '#', '.', '#', '#', '.'},  // 9
                                 {'#', '.', '.', '.', '.', '#', '.', '#', '.', '.', '.', '.'},  // 10
                                 {'#', '#', '#', '#', '.', '.', '.', '.', '.', '.', 'S', '.'}}; // 11


char maze3[ 12 ][ 12 ] = {{'#', '#', '#', '#', '#', 'E', '#', '#', '#', '#', '#', '#'},  // 0
            {'#', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '#'},  // 1
            {'.', '.', '#', '.', '#', '.', '#', '#', '#', '#', '.', '#'},  // 2
            {'#', '#', '#', '.', '#', '.', '.', '.', '.', '#', '.', '#'},  // 3
            {'#', '.', '.', '.', '.', '#', '#', '#', '.', '#', '.', '.'},  // 4
            {'#', '#', '#', '#', '.', '#', '.', '#', '.', '#', '.', '#'},  // 5
            {'#', '.', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#'},  // 6
            {'#', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#'},  // 7
            {'#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '#'},  // 8
            {'#', '#', '#', '#', '#', '#', '.', '#', '#', '#', '.', '#'},  // 9
            {'#', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '#'},  // 10
            {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', 'S', '#'}
     };// 11









    if(x==1)
    game(maze3);
    if(x==2)
    game(maze2);
    if(x==3)
    game(maze1);
    return 0;
}
